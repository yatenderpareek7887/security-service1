services:
  log-ingestor-service:
    image: log-ingestor-service:latest
    build:
      context: ./log-ingestor-service
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DBNAME=threat_log_db
      - BASE_PATH=/api/
      - PORT=8080
      - JWT_SECRET_KEY=7de0b09dc71698f5d64ddca90b4278207595fd2b25cfc1bc98f7e7345fd5029a
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  threat-analyzer-service:
    image: threat-analyzer-service:latest
    build:
      context: ./threat-analyzer-service
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    environment:
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
      - MYSQL_HOST=mysql
      - MYSQL_PORT=3306
      - MYSQL_DBNAME=threat_log_db
      - BASE_PATH=/api/
      - PORT=8081
      - JWT_SECRET_KEY=7de0b09dc71698f5d64ddca90b4278207595fd2b25cfc1bc98f7e7345fd5029a
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

  mysql:
    image: mysql:8.0
    container_name: local-mysql
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=threat_log_db
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped
    networks:
      - app-network

volumes:
  mysql-data:

networks:
  app-network:
    driver: bridge