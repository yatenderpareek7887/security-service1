// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/login": {
            "get": {
                "description": "Authenticates a user and returns a JWT token using query parameters",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "User login",
                "parameters": [
                    {
                        "type": "string",
                        "description": "User username",
                        "name": "username",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "User password",
                        "name": "password",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Login success with JWT token",
                        "schema": {
                            "$ref": "#/definitions/authdto.LoginResponseDTO"
                        }
                    },
                    "400": {
                        "description": "error: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "401": {
                        "description": "error: Invalid credentials",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/register": {
            "post": {
                "description": "Creates a new user account with username, password, and email",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "User registration details",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/authdto.RegisterRequestDTO"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Registration success",
                        "schema": {
                            "$ref": "#/definitions/authdto.RegisterResponseDTO"
                        }
                    },
                    "400": {
                        "description": "error: Invalid input",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "error: Username or email already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error: Server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/threats": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetches all detected threats from the database",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threats"
                ],
                "summary": "Retrieve all threats",
                "responses": {
                    "200": {
                        "description": "List of threats",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/threatentity.Threat"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/threats/analyze": {
            "post": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Analyzes logs within the specified time range and detects threats",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threats"
                ],
                "summary": "Analyze logs for threats",
                "parameters": [
                    {
                        "description": "Start and end time for log analysis",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.AnalyzeThreatRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of detected threats",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/threatentity.Threat"
                            }
                        }
                    },
                    "400": {
                        "description": "Invalid request",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/threats/search": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Searches threats by type, user, or time range",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threats"
                ],
                "summary": "Search threats",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Threat type",
                        "name": "type",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "User ID",
                        "name": "user",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Start time (RFC3339)",
                        "name": "startTime",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "End time (RFC3339)",
                        "name": "endTime",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of matching threats",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/threatentity.Threat"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/api/threats/{threatId}": {
            "get": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Fetches a threat by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threats"
                ],
                "summary": "Retrieve a specific threat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Threat ID",
                        "name": "threatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Threat details",
                        "schema": {
                            "$ref": "#/definitions/threatentity.Threat"
                        }
                    },
                    "404": {
                        "description": "Threat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "BearerAuth": []
                    }
                ],
                "description": "Deletes a threat by its ID",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Threats"
                ],
                "summary": "Delete a specific threat",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "threat ID",
                        "name": "threatId",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "204": {
                        "description": "threat deleted successfully"
                    },
                    "404": {
                        "description": "threat not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "authdto.LoginResponseDTO": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "authdto.RegisterRequestDTO": {
            "type": "object",
            "required": [
                "email",
                "password",
                "username"
            ],
            "properties": {
                "email": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                },
                "password": {
                    "type": "string",
                    "maxLength": 100,
                    "minLength": 8
                },
                "username": {
                    "type": "string",
                    "maxLength": 50,
                    "minLength": 3
                }
            }
        },
        "authdto.RegisterResponseDTO": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "controllers.AnalyzeThreatRequest": {
            "type": "object",
            "required": [
                "end",
                "start"
            ],
            "properties": {
                "end": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-03-27T00:00:00Z"
                },
                "start": {
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-03-26T00:00:00Z"
                }
            }
        },
        "threatentity.Threat": {
            "type": "object",
            "properties": {
                "action": {
                    "type": "string"
                },
                "databaseQuery": {
                    "type": "string"
                },
                "fileName": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "ipAddress": {
                    "type": "string"
                },
                "severity": {
                    "type": "string"
                },
                "threatType": {
                    "type": "string"
                },
                "timestamp": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BearerAuth": {
            "description": "Type \"Bearer\" followed by a space and JWT token",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8083",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "Threat Analyzer Service API",
	Description:      "API for threat analyzer",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
